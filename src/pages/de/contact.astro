---
import Layout from '../../layouts/Layout.astro';
import { getLanguageFromUrl, t } from '../../i18n/utils';

const currentLang = getLanguageFromUrl(Astro.url);
---

<Layout title={`${t('contact.title', currentLang)} | Simon Rost`}>
  <section class="contact-section">
    <div class="container">
      <div class="contact-header fade-in" data-delay="0.1">
        <h1>{t('contact.title', currentLang)}</h1>
        <div class="subtitle">{t('contact.subtitle', currentLang)}</div>
      </div>
      
      <div class="contact-grid">
        <div class="contact-info fade-in" data-delay="0.2">
          <div class="info-card">
            <div class="icon">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="4" width="20" height="16" rx="2"></rect><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path></svg>
            </div>
            <div class="info-content">
              <h3>{t('contact.email', currentLang)}</h3>
              <p>{t('contact.emailDesc', currentLang)}</p>
              <a href="mailto:your.email@example.com">your.email@example.com</a>
            </div>
          </div>
          
          <div class="info-card">
            <div class="icon">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>
            </div>
            <div class="info-content">
              <h3>{t('contact.github', currentLang)}</h3>
              <p>{t('contact.githubDesc', currentLang)}</p>
              <a href="https://github.com/yourusername" target="_blank" rel="noopener noreferrer">github.com/yourusername</a>
            </div>
          </div>
          
          <div class="info-card">
            <div class="icon">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle></svg>
            </div>
            <div class="info-content">
              <h3>{t('contact.linkedin', currentLang)}</h3>
              <p>{t('contact.linkedinDesc', currentLang)}</p>
              <a href="https://linkedin.com/in/yourusername" target="_blank" rel="noopener noreferrer">linkedin.com/in/yourusername</a>
            </div>
          </div>
        </div>
        
        <div class="contact-form-container fade-in" data-delay="0.3">
          <div class="form-card">
            <h2>{t('contact.sendMessage', currentLang)}</h2>
            <form id="contact-form" class="contact-form">
              <div class="form-group">
                <label for="name">{t('contact.yourName', currentLang)}</label>
                <input type="text" id="name" name="name" required />
              </div>
              
              <div class="form-group">
                <label for="email">{t('contact.yourEmail', currentLang)}</label>
                <input type="email" id="email" name="email" required />
              </div>
              
              <div class="form-group">
                <label for="subject">{t('contact.subject', currentLang)}</label>
                <input type="text" id="subject" name="subject" required />
              </div>
              
              <div class="form-group">
                <label for="message">{t('contact.message', currentLang)}</label>
                <textarea id="message" name="message" rows="6" required></textarea>
              </div>
              
              <button type="submit" class="btn">{t('contact.sendButton', currentLang)}</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form');
    
    form?.addEventListener('submit', (e) => {
      e.preventDefault();
      
      // Simple form validation
      const name = document.getElementById('name') as HTMLInputElement;
      const email = document.getElementById('email') as HTMLInputElement;
      const subject = document.getElementById('subject') as HTMLInputElement;
      const message = document.getElementById('message') as HTMLTextAreaElement;
      
      if (!name.value || !email.value || !subject.value || !message.value) {
        alert('Bitte füllen Sie alle Felder aus');
        return;
      }
      
      // In a real application, you would send the form data to a server
      // For this example, we'll just show a success message
      alert('Vielen Dank für Ihre Nachricht! Ich werde mich so schnell wie möglich bei Ihnen melden.');
      form.reset();
    });
  });
</script>

<style>
  .contact-section {
    padding: var(--spacing-xl) 0;
  }
  
  .contact-header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
  }
  
  .subtitle {
    color: var(--color-text-muted);
    font-size: 1.25rem;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .contact-grid {
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    gap: var(--spacing-lg);
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .contact-info {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }
  
  .info-card {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md);
    padding: var(--spacing-lg);
    background-color: var(--color-card);
    border-radius: 8px;
    box-shadow: 0 4px 6px var(--color-card-shadow);
  }
  
  .icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background-color: var(--color-primary-muted);
    color: var(--color-primary);
    border-radius: 8px;
    flex-shrink: 0;
  }
  
  .info-content h3 {
    margin-bottom: var(--spacing-xs);
  }
  
  .info-content p {
    color: var(--color-text-muted);
    margin-bottom: var(--spacing-sm);
  }
  
  .info-content a {
    color: var(--color-primary);
    font-weight: 500;
  }
  
  .contact-form-container {
    max-width: 100%;
  }
  
  .form-card {
    padding: var(--spacing-lg);
    background-color: var(--color-card);
    border-radius: 8px;
    box-shadow: 0 4px 6px var(--color-card-shadow);
  }
  
  .form-card h2 {
    margin-bottom: var(--spacing-lg);
    text-align: center;
  }
  
  .contact-form {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }
  
  .form-group {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
  }
  
  .form-group label {
    font-weight: 500;
  }
  
  .form-group input, .form-group textarea {
    padding: 0.75rem;
    border: 1px solid var(--color-border);
    border-radius: 4px;
    background-color: var(--color-bg);
    color: var(--color-text);
    font-family: var(--font-sans);
    transition: border-color var(--transition-quick);
  }
  
  .form-group input:focus, .form-group textarea:focus {
    outline: none;
    border-color: var(--color-primary);
  }
  
  .contact-form .btn {
    margin-top: var(--spacing-sm);
    align-self: flex-start;
  }
  
  @media (max-width: 992px) {
    .contact-grid {
      grid-template-columns: 1fr;
    }
    
    .contact-info {
      order: 2;
    }
    
    .contact-form-container {
      order: 1;
    }
  }
  
  @media (max-width: 768px) {
    .contact-form .btn {
      width: 100%;
      text-align: center;
    }
  }
</style>
